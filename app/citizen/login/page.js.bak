"use client";

import Header from "@/components/Header";
import { useState } from "react";
import { useRouter } from "next/navigation";

export default function CitizenLoginPage() {
  const [form, setForm] = useState({ phone: "", password: "" });
  const [err, setErr] = useState("");
  const [loading, setLoading] = useState(false);
  const router = useRouter();

  const submit = async (e) => {
    e.preventDefault();
    setErr("");
    setLoading(true);

    if (!/^\d{10}$/.test(form.phone)) {
      setErr("Phone must be 10 digits");
      setLoading(false);
      return;
    }
    if (!form.password) {
      setErr("Password is required");
      setLoading(false);
      return;
    }

    try {
      const res = await fetch("/api/citizen/login", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(form),
      });
      const data = await res.json();
      if (!res.ok) {
        setErr(data.error || "Login failed");
        setLoading(false);
        return;
      }

      if (data.token) localStorage.setItem("cc_token", data.token);
      if (data.user) localStorage.setItem("cc_user", JSON.stringify(data.user));
      router.push("/citizen/dashboard");
    } catch {
      setErr("Network error");
    } finally {
      setLoading(false);
    }
  };

  return (
    <>
      <Header />
      <div className="flex justify-center items-center min-h-[calc(100vh-64px)] bg-gray-100 p-4">
        <form onSubmit={submit} className="bg-white shadow-md rounded-lg p-6 w-full max-w-sm">
          <h2 className="text-xl mb-4 font-bold text-green-600 text-center">Citizen Login</h2>
          {err && <div className="mb-3 text-sm text-red-600 text-center">{err}</div>}

          <input className="border p-2 mb-3 w-full rounded text-black bg-white" placeholder="Phone (10 digits)" inputMode="numeric" maxLength={10} value={form.phone} onChange={(e) => setForm({ ...form, phone: e.target.value })} required />
          <input type="password" className="border p-2 mb-1 w-full rounded text-black bg-white" placeholder="Password" value={form.password} onChange={(e) => setForm({ ...form, password: e.target.value })} required />

          <button type="submit" disabled={loading} className="mt-3 bg-green-600 text-white px-4 py-2 rounded w-full hover:bg-green-700 disabled:opacity-60">
            {loading ? "Logging in..." : "Login"}
          </button>

          <p className="text-xs text-gray-600 mt-3 text-center">Not verified? <a href="/citizen/verify" className="underline">Verify OTP</a></p>
        </form>
      </div>
    </>
  );
}
